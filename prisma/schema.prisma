// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?  @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]
  strategies    Strategy[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

enum OptionPosition {
  LONG
  SHORT
}

enum OptionType {
  CALL
  PUT
}

model Option {
  id              String         @id @default(cuid())
  variantId       String         @map("variant_id")
  type            OptionType
  position        OptionPosition
  underlyingAsset String?
  spotPrice       Float
  strikePrice     Float
  expirationDate  DateTime
  volatility      Float
  interestRate    Float
  divident        Float
  strike          Float
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  variant         Variant        @relation(fields: [variantId], references: [id])

  @@map("options")
}

model Variant {
  id          String   @id @default(cuid())
  strategyId  String   @map("strategy_id")
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  options     Option[]
  strategy    Strategy @relation(fields: [strategyId], references: [id], onDelete: Cascade)

  @@map("variants")
}

model Strategy {
  id          String    @id @default(cuid())
  userId      String    @map("user_id")
  title       String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  variants    Variant[]

  @@map("strategies")
}
